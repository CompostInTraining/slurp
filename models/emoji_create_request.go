// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EmojiCreateRequest EmojiCreateRequest represents a request to create a custom emoji made through the admin API.
//
// swagger:model EmojiCreateRequest
type EmojiCreateRequest struct {

	// Category in which to place the new emoji. Will be uncategorized by default.
	// CategoryName length should not exceed 64 characters.
	CategoryName string `json:"CategoryName,omitempty"`

	// Image file to use for the emoji. Must be png or gif and no larger than 50kb.
	Image interface{} `json:"Image,omitempty"`

	// Desired shortcode for the emoji, without surrounding colons. This must be unique for the domain.
	// Example: blobcat_uwu
	Shortcode string `json:"Shortcode,omitempty"`
}

// Validate validates this emoji create request
func (m *EmojiCreateRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this emoji create request based on context it is used
func (m *EmojiCreateRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EmojiCreateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EmojiCreateRequest) UnmarshalBinary(b []byte) error {
	var res EmojiCreateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
