// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PollRequest PollRequest models a request to create a poll.
//
// swagger:model PollRequest
type PollRequest struct {

	// Duration the poll should be open, in seconds.
	// If provided, media_ids cannot be used, and poll[options] must be provided.
	ExpiresIn int64 `json:"ExpiresIn,omitempty"`

	// Duration the poll should be open, in seconds.
	// If provided, media_ids cannot be used, and poll[options] must be provided.
	ExpiresInI interface{} `json:"expires_in,omitempty"`

	// Hide vote counts until the poll ends.
	HideTotals bool `json:"hide_totals,omitempty"`

	// Allow multiple choices on this poll.
	Multiple bool `json:"multiple,omitempty"`

	// Array of possible answers.
	// If provided, media_ids cannot be used, and poll[expires_in] must be provided.
	// name: poll[options]
	Options []string `json:"options"`
}

// Validate validates this poll request
func (m *PollRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this poll request based on context it is used
func (m *PollRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PollRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PollRequest) UnmarshalBinary(b []byte) error {
	var res PollRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
