// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DomainPermissionRequest DomainPermissionRequest is the form submitted as a POST to create a new domain permission entry (allow/block).
//
// swagger:model DomainPermissionRequest
type DomainPermissionRequest struct {

	// A single domain for which this permission request should apply.
	// Only used if import=true is NOT specified or if import=false.
	// Example: example.org
	Domain string `json:"domain,omitempty"`

	// A list of domains for which this permission request should apply.
	// Only used if import=true is specified.
	Domains interface{} `json:"domains,omitempty"`

	// Obfuscate the domain name when displaying this permission entry publicly.
	// Ie., instead of 'example.org' show something like 'e**mpl*.or*'.
	// Example: false
	Obfuscate bool `json:"obfuscate,omitempty"`

	// Private comment for other admins on why this permission entry was created.
	// Example: don't like 'em!!!!
	PrivateComment string `json:"private_comment,omitempty"`

	// Public comment on why this permission entry was created.
	// Will be visible to requesters at /api/v1/instance/peers if this endpoint is exposed.
	// Example: foss dorks ðŸ˜«
	PublicComment string `json:"public_comment,omitempty"`
}

// Validate validates this domain permission request
func (m *DomainPermissionRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this domain permission request based on context it is used
func (m *DomainPermissionRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DomainPermissionRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainPermissionRequest) UnmarshalBinary(b []byte) error {
	var res DomainPermissionRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
