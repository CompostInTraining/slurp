// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AdvancedVisibilityFlagsForm AdvancedVisibilityFlagsForm allows a few more advanced flags to be set on new statuses, in addition
// to the standard mastodon-compatible ones.
//
// swagger:model AdvancedVisibilityFlagsForm
type AdvancedVisibilityFlagsForm struct {

	// This status can be boosted/reblogged.
	Boostable bool `json:"boostable,omitempty"`

	// This status will be federated beyond the local timeline(s).
	Federated bool `json:"federated,omitempty"`

	// This status can be liked/faved.
	Likeable bool `json:"likeable,omitempty"`

	// This status can be replied to.
	Replyable bool `json:"replyable,omitempty"`
}

// Validate validates this advanced visibility flags form
func (m *AdvancedVisibilityFlagsForm) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this advanced visibility flags form based on context it is used
func (m *AdvancedVisibilityFlagsForm) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AdvancedVisibilityFlagsForm) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AdvancedVisibilityFlagsForm) UnmarshalBinary(b []byte) error {
	var res AdvancedVisibilityFlagsForm
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
