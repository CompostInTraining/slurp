// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/VyrCossont/slurp/client/accounts"
	"github.com/VyrCossont/slurp/client/admin"
	"github.com/VyrCossont/slurp/client/apps"
	"github.com/VyrCossont/slurp/client/blocks"
	"github.com/VyrCossont/slurp/client/bookmarks"
	"github.com/VyrCossont/slurp/client/custom_emojis"
	"github.com/VyrCossont/slurp/client/debug"
	"github.com/VyrCossont/slurp/client/favourites"
	"github.com/VyrCossont/slurp/client/featured_tags"
	"github.com/VyrCossont/slurp/client/federation"
	"github.com/VyrCossont/slurp/client/filters"
	"github.com/VyrCossont/slurp/client/follow_requests"
	"github.com/VyrCossont/slurp/client/instance"
	"github.com/VyrCossont/slurp/client/lists"
	"github.com/VyrCossont/slurp/client/markers"
	"github.com/VyrCossont/slurp/client/media"
	"github.com/VyrCossont/slurp/client/nodeinfo"
	"github.com/VyrCossont/slurp/client/notifications"
	"github.com/VyrCossont/slurp/client/nr_well_known"
	"github.com/VyrCossont/slurp/client/polls"
	"github.com/VyrCossont/slurp/client/preferences"
	"github.com/VyrCossont/slurp/client/reports"
	"github.com/VyrCossont/slurp/client/search"
	"github.com/VyrCossont/slurp/client/statuses"
	"github.com/VyrCossont/slurp/client/streaming"
	"github.com/VyrCossont/slurp/client/timelines"
	"github.com/VyrCossont/slurp/client/user"
)

// Default go to social swagger documentation HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "example.org"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http", "https", "wss"}

// NewHTTPClient creates a new go to social swagger documentation HTTP client.
func NewHTTPClient(formats strfmt.Registry) *GoToSocialSwaggerDocumentation {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new go to social swagger documentation HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *GoToSocialSwaggerDocumentation {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new go to social swagger documentation client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *GoToSocialSwaggerDocumentation {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(GoToSocialSwaggerDocumentation)
	cli.Transport = transport
	cli.Accounts = accounts.New(transport, formats)
	cli.Admin = admin.New(transport, formats)
	cli.Apps = apps.New(transport, formats)
	cli.Blocks = blocks.New(transport, formats)
	cli.Bookmarks = bookmarks.New(transport, formats)
	cli.CustomEmojis = custom_emojis.New(transport, formats)
	cli.Debug = debug.New(transport, formats)
	cli.Favourites = favourites.New(transport, formats)
	cli.FeaturedTags = featured_tags.New(transport, formats)
	cli.Federation = federation.New(transport, formats)
	cli.Filters = filters.New(transport, formats)
	cli.FollowRequests = follow_requests.New(transport, formats)
	cli.Instance = instance.New(transport, formats)
	cli.Lists = lists.New(transport, formats)
	cli.Markers = markers.New(transport, formats)
	cli.Media = media.New(transport, formats)
	cli.Nodeinfo = nodeinfo.New(transport, formats)
	cli.Notifications = notifications.New(transport, formats)
	cli.NrWellKnown = nr_well_known.New(transport, formats)
	cli.Polls = polls.New(transport, formats)
	cli.Preferences = preferences.New(transport, formats)
	cli.Reports = reports.New(transport, formats)
	cli.Search = search.New(transport, formats)
	cli.Statuses = statuses.New(transport, formats)
	cli.Streaming = streaming.New(transport, formats)
	cli.Timelines = timelines.New(transport, formats)
	cli.User = user.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// GoToSocialSwaggerDocumentation is a client for go to social swagger documentation
type GoToSocialSwaggerDocumentation struct {
	Accounts accounts.ClientService

	Admin admin.ClientService

	Apps apps.ClientService

	Blocks blocks.ClientService

	Bookmarks bookmarks.ClientService

	CustomEmojis custom_emojis.ClientService

	Debug debug.ClientService

	Favourites favourites.ClientService

	FeaturedTags featured_tags.ClientService

	Federation federation.ClientService

	Filters filters.ClientService

	FollowRequests follow_requests.ClientService

	Instance instance.ClientService

	Lists lists.ClientService

	Markers markers.ClientService

	Media media.ClientService

	Nodeinfo nodeinfo.ClientService

	Notifications notifications.ClientService

	NrWellKnown nr_well_known.ClientService

	Polls polls.ClientService

	Preferences preferences.ClientService

	Reports reports.ClientService

	Search search.ClientService

	Statuses statuses.ClientService

	Streaming streaming.ClientService

	Timelines timelines.ClientService

	User user.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *GoToSocialSwaggerDocumentation) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Accounts.SetTransport(transport)
	c.Admin.SetTransport(transport)
	c.Apps.SetTransport(transport)
	c.Blocks.SetTransport(transport)
	c.Bookmarks.SetTransport(transport)
	c.CustomEmojis.SetTransport(transport)
	c.Debug.SetTransport(transport)
	c.Favourites.SetTransport(transport)
	c.FeaturedTags.SetTransport(transport)
	c.Federation.SetTransport(transport)
	c.Filters.SetTransport(transport)
	c.FollowRequests.SetTransport(transport)
	c.Instance.SetTransport(transport)
	c.Lists.SetTransport(transport)
	c.Markers.SetTransport(transport)
	c.Media.SetTransport(transport)
	c.Nodeinfo.SetTransport(transport)
	c.Notifications.SetTransport(transport)
	c.NrWellKnown.SetTransport(transport)
	c.Polls.SetTransport(transport)
	c.Preferences.SetTransport(transport)
	c.Reports.SetTransport(transport)
	c.Search.SetTransport(transport)
	c.Statuses.SetTransport(transport)
	c.Streaming.SetTransport(transport)
	c.Timelines.SetTransport(transport)
	c.User.SetTransport(transport)
}
